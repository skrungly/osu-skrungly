services:
  mysql:
    image: mysql:latest
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      NYSQL_HOST: ${DB_HOST}
      MYSQL_PORT: ${DB_PORT}
      MYSQL_RANDOM_ROOT_PASSWORD: "true"
    volumes:
      - ./bancho/migrations/base.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - mysql:/var/lib/mysql
    healthcheck:
      test: "/usr/bin/mysql --user=$$MYSQL_USER --password=$$MYSQL_PASSWORD --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10

  redis:
    image: bitnami/redis:latest
    user: root
    volumes:
      - redis:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PASSWORD=${REDIS_PASS}

  bancho:
    build:
      context: bancho
      dockerfile: ./Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    tty: true
    init: true
    volumes:
      - ./bancho:/srv/root
      - data:/srv/root/.data
    environment:
      - APP_HOST=${APP_HOST}
      - APP_PORT=${APP_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - REDIS_USER=${REDIS_USER}
      - REDIS_PASS=${REDIS_PASS}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - OSU_API_KEY=${OSU_API_KEY}
      - MIRROR_SEARCH_ENDPOINT=${MIRROR_SEARCH_ENDPOINT}
      - MIRROR_DOWNLOAD_ENDPOINT=${MIRROR_DOWNLOAD_ENDPOINT}
      - DOMAIN=${DOMAIN}
      - COMMAND_PREFIX=${COMMAND_PREFIX}
      - SEASONAL_BGS=${SEASONAL_BGS}
      - MENU_ICON_URL=${MENU_ICON_URL}
      - MENU_ONCLICK_URL=${MENU_ONCLICK_URL}
      - DATADOG_API_KEY=${DATADOG_API_KEY}
      - DATADOG_APP_KEY=${DATADOG_APP_KEY}
      - DEBUG=${DEBUG}
      - REDIRECT_OSU_URLS=${REDIRECT_OSU_URLS}
      - PP_CACHED_ACCS=${PP_CACHED_ACCS}
      - DISALLOWED_NAMES=${DISALLOWED_NAMES}
      - DISALLOWED_PASSWORDS=${DISALLOWED_PASSWORDS}
      - DISALLOW_OLD_CLIENTS=${DISALLOW_OLD_CLIENTS}
      - DISALLOW_INGAME_REGISTRATION=${DISALLOW_INGAME_REGISTRATION}
      - DISCORD_AUDIT_LOG_WEBHOOK=${DISCORD_AUDIT_LOG_WEBHOOK}
      - DISCORD_CHAT_WEBHOOK=${DISCORD_CHAT_WEBHOOK}
      - AUTOMATICALLY_REPORT_PROBLEMS=${AUTOMATICALLY_REPORT_PROBLEMS}
      - SSL_CERT_PATH=${SSL_CERT_PATH}
      - SSL_KEY_PATH=${SSL_KEY_PATH}
      - DEVELOPER_MODE=${DEVELOPER_MODE}
    healthcheck:
      test: "curl -f http://c.${DOMAIN} --resolve 'c.${DOMAIN}:${APP_PORT}:127.0.0.1'"
      interval: 10s
      timeout: 4s
      retries: 10

  web:
    build: web
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}

  nginx:
    image: nginx
    depends_on:
      - bancho
      - web
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ${SSL_CERT_PATH}:/etc/ssl/certs/bancho.pem:ro
      - ${SSL_KEY_PATH}:/etc/ssl/private/bancho.key:ro
      - data:/.data:ro
      - discord:/srv/skins:ro

  discord:
    build: discord
    depends_on:
      bancho:
        condition: service_healthy
    volumes:
      - discord:/bot/assets/skins
    environment:
      BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      MAP_DL_MIRROR: ${MIRROR_DOWNLOAD_ENDPOINT}
      DOMAIN: ${DOMAIN}

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run
    restart: unless-stopped
    environment:
      TUNNEL_TOKEN: ${TUNNEL_TOKEN}

volumes:
  data:
  mysql:
  redis:
  discord:
